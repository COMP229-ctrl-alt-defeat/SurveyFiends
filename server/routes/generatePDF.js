let express = require('express');
let router = express.Router();

// setting up access to survey, questions, answers
let Survey = require('../models/survey');
let Question = require('../models/question');
let Answer = require('../models/answer');

// setting up pdfKit to generate pdf
let pdfDoc = require('pdfkit');

router.get('/:id', (req, res, next) => {
    let surveyID = req.params.id;
    console.log('Generating pdf for: ' + surveyID);


    // getting results
        // get the survey
    Survey.findById(surveyID, (err, survey) =>{
        //get all quesitons associated with survey
        Question.find({surveyID: surveyID}).sort('questionsnumber').exec((err, surveyQuestions) => {
          //get all answers associated with survey
          Answer.find({surveyID: surveyID}).exec((err, answersList)=>{
            
            //creating pdf
            let pdf = new pdfDoc();

            // header
            pdf.image('public/Images/WhatsApp Image 2020-11-06 at 10.34.24 PM.jpeg', {width: 120});
            pdf.moveUp(2.75);
            pdf.fontSize(20).fillColor('gray').text('Survey Results', {align: 'right'});
            pdf.fontSize(10).text('Generated by Ctrl-Atl-Defeat', {align: 'right'});


            //adding title to pdf
            pdf.moveDown(2.5).fillColor('black').fontSize(28).text(survey.surveyName, {align:'center'});
            pdf.fontSize(12).text("By: " + survey.authorName, {indent: 10, align:'center'});
            pdf.moveUp(1.25);

            // getting data to populate pdf
            for( let questionCount = 0; questionCount < surveyQuestions.length; questionCount++){
                let trueCount = 0;
                let falseCount = 0;
                for(let answerCount =0; answerCount < answersList.length; answerCount++){
                    if(answersList[answerCount].questionID == surveyQuestions[questionCount]._id){
                        if(answersList[answerCount].responderAnswer == true){
                            trueCount++;
                        }else{
                            falseCount++;
                        }
                    }
                }


                // adding Question and number of replies per option
                pdf.moveDown(2.3).fillColor('gray').fontSize(16).text(surveyQuestions[questionCount].question,{indent: 25, oblique: 10})
                pdf.moveDown(0.5).fillColor('black').fontSize(12).text('True : ' + trueCount, {indent:50});
                pdf.text('False : ' + falseCount, {indent:50});
            }

            // piping pdf to the response
            pdf.pipe(res);

            // closing pdf
            pdf.end();

          })
        })
      })


    
})


module.exports = router;